<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ncu.mapper.EmailInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ncu.pojo.EmailInfo" >
    <id column="email_id" property="emailId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="email_content" property="emailContent" jdbcType="VARCHAR" />
    <result column="email_time" property="emailTime" jdbcType="TIMESTAMP" />
    <result column="email_state" property="emailState" jdbcType="VARCHAR" />
    <result column="email_theme" property="emailTheme" jdbcType="VARCHAR" />
    <result column="is_used" property="isUsed" jdbcType="VARCHAR" />
    
    <!-- 关联CustomerInfo对象 -->
    <association property="ci" javaType="com.ncu.pojo.CustomerInfo">
      <result property="customerName" column="customer_name"/>
      <result property="customerMobile" column="customer_mobile"/>
    </association>
    
  </resultMap>
  <!-- 根据用户选择的时间区间查看该时间段该用户里应给客户发送信息的数量 -->
  <select id="countByCondition" resultType="Integer">
     select count(*) from email_info 
      <where>
         user_id=#{userId} and date(email_time) between #{today} and #{emailTime}
      </where>   
  </select>
  <!-- 根据用户选择的时间区间查看该时间段该用户里应给客户发送信息的具体信息和相关联表的信息 -->
  <select id="selectByEmailTime" resultMap="BaseResultMap">
     select ei.* ,ci.customer_name,ci.customer_mobile
          FROM email_info ei
          LEFT JOIN customer_info ci ON ei.customer_id =ci.customer_id
        <where>
         ei.user_id=#{userId} and date(ei.email_time) between #{today} and #{emailTime}
        </where> 
  Limit #{startPos},#{pageSize}
  </select>
  
  <!-- 自动生成 -->
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    email_id, customer_id, user_id, email_content, email_time, email_state, email_theme, 
    is_used
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ncu.pojo.EmailInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from email_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from email_info
    where email_id = #{emailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from email_info
    where email_id = #{emailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ncu.pojo.EmailInfoExample" >
    delete from email_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ncu.pojo.EmailInfo" >
    insert into email_info (email_id, customer_id, user_id, 
      email_content, email_time, email_state, 
      email_theme, is_used)
    values (#{emailId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{emailContent,jdbcType=VARCHAR}, #{emailTime,jdbcType=TIMESTAMP}, #{emailState,jdbcType=VARCHAR}, 
      #{emailTheme,jdbcType=VARCHAR}, #{isUsed,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ncu.pojo.EmailInfo" >
    insert into email_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="emailId != null" >
        email_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="emailContent != null" >
        email_content,
      </if>
      <if test="emailTime != null" >
        email_time,
      </if>
      <if test="emailState != null" >
        email_state,
      </if>
      <if test="emailTheme != null" >
        email_theme,
      </if>
      <if test="isUsed != null" >
        is_used,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="emailId != null" >
        #{emailId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="emailContent != null" >
        #{emailContent,jdbcType=VARCHAR},
      </if>
      <if test="emailTime != null" >
        #{emailTime,jdbcType=TIMESTAMP},
      </if>
      <if test="emailState != null" >
        #{emailState,jdbcType=VARCHAR},
      </if>
      <if test="emailTheme != null" >
        #{emailTheme,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null" >
        #{isUsed,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ncu.pojo.EmailInfoExample" resultType="java.lang.Integer" >
    select count(*) from email_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update email_info
    <set >
      <if test="record.emailId != null" >
        email_id = #{record.emailId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.emailContent != null" >
        email_content = #{record.emailContent,jdbcType=VARCHAR},
      </if>
      <if test="record.emailTime != null" >
        email_time = #{record.emailTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.emailState != null" >
        email_state = #{record.emailState,jdbcType=VARCHAR},
      </if>
      <if test="record.emailTheme != null" >
        email_theme = #{record.emailTheme,jdbcType=VARCHAR},
      </if>
      <if test="record.isUsed != null" >
        is_used = #{record.isUsed,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update email_info
    set email_id = #{record.emailId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      email_content = #{record.emailContent,jdbcType=VARCHAR},
      email_time = #{record.emailTime,jdbcType=TIMESTAMP},
      email_state = #{record.emailState,jdbcType=VARCHAR},
      email_theme = #{record.emailTheme,jdbcType=VARCHAR},
      is_used = #{record.isUsed,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ncu.pojo.EmailInfo" >
    update email_info
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="emailContent != null" >
        email_content = #{emailContent,jdbcType=VARCHAR},
      </if>
      <if test="emailTime != null" >
        email_time = #{emailTime,jdbcType=TIMESTAMP},
      </if>
      <if test="emailState != null" >
        email_state = #{emailState,jdbcType=VARCHAR},
      </if>
      <if test="emailTheme != null" >
        email_theme = #{emailTheme,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null" >
        is_used = #{isUsed,jdbcType=VARCHAR},
      </if>
    </set>
    where email_id = #{emailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ncu.pojo.EmailInfo" >
    update email_info
    set customer_id = #{customerId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      email_content = #{emailContent,jdbcType=VARCHAR},
      email_time = #{emailTime,jdbcType=TIMESTAMP},
      email_state = #{emailState,jdbcType=VARCHAR},
      email_theme = #{emailTheme,jdbcType=VARCHAR},
      is_used = #{isUsed,jdbcType=VARCHAR}
    where email_id = #{emailId,jdbcType=INTEGER}
  </update>
</mapper>